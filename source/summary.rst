
.. icon 用ラベルの読み込み
.. include:: def_icon.txt


はじめに
=======================

Kamuee とは
-------------------------------------


kamuee は NTT コミュニケーションズが開発した、
高速な経路検索とパケット転送を提供する、
ソフトウェアのパケットフォーワーディングエンジンです。
Kamuee は、「汎用 CPU のみを前提とし、専用のハードウェアを前提としない」
というピュアソフトウェアアプローチをとっています。
DPDK ライブラリを利用しており、DPDK が動作する CPU アーキテクチャ、
Network Interface Card（NIC）であれば、大抵のハードウェアで
kamuee が動作すると期待できます。
Kamuee は独自の高速経路検索アルゴリズム「Poptrie」を採用しており、
OSPF や BGP などの経路制御プロトコルを動作させ、
大規模な数の経路を扱うような、
full-fledged な（本格的な）ソフトウェアルータとして利用可能です。

kamuee は以下のような利点を持つことを理想とした設計がなされています。

#. 既存のソフトウェア資産を再利用・有効活用すること。kamuee は Linux 上で
   動作する各種経路制御ソフトウェアと経路情報を共有し、連携することが
   できます。

#. ソフトウェアが性能向上の足かせにならないこと。
   トラフィック処理をマルチコア CPU 上に並列分散処理させることが可能で、
   任意の数の CPU スレッドをパケット転送に割り当てることができます。
   このことから、大量の CPU コアを投入することで、必要とされる性能を
   容易に準備することができるという期待があります。
   （コア数を増やすことで対応できるため、トラフィック処理を複数の CPU コアに
   スケールアウトさせることができる、ということができます。）

#. ハードウェアメーカーによるベンダロックインの回避。
   ソフトウェアルータの特徴を生かし、CPU の交換・増速によるパケット
   転送性能を調節したり、
   通信インターフェイス（NIC）の交換・追加・高速化をするなど、
   ハードウェアの自由な選択と、経済的コストの調整が実現できます。

kamueeは次の複数の要素から構成されています。

    * オープンソースの高速パケット転送機構（DPDKライブラリ）
    * 独自開発の超高速経路検索アルゴリズム（poptrie）
    * オープンソースの経路制御ソフトウェア

これらの要素技術は単独ではルータとして機能できませんが、
kamuee がこれらの機能を制御することで、
それぞれを超高速インターネットルータのフォーワーディングエンジンとして
利用できるようになりました。
結果、Linux 上で動作する各種経路制御ソフトと経路情報を共有し、
各エンジンにてパケットの高速転送を提供します。


問い合わせ先・バグレポート
-------------------------------------

* kamuee-contact@ml.ntt.com


本マニュアルの更新履歴
-------------------------------------

.. include:: history.rst


コマンドシンタックスの表記方式
--------------------------------

コマンドのシンタックスでは、太文字でコマンド文を表記し、円かっこ () と 三角かっこ <> で囲まれた２種類のパラメータを表記します。
円かっこ () 内に記されたパラメータはオプションパラメータで、任意のパラメータです。
三角かっこ <> 内に記載されたパラメータは数値パラメータで、指定された範囲の数値、または指定されたIDを入力します。
また、円かっこ () 内のパラメータは パイプ文字 \| でパラメータが区切られており、パラメータを選択する形式になります。

.. code-block:: none

    例１)　show ipv4 route length (|le|lt|gt|ge) <0-32>

とシンタックスが表記されていた場合、``(|le|lt|gt|ge)`` はオプションパラメータ、
``<0-32>`` は数値パラメータになります。
``(|le|lt|gt|ge)`` は選択式で、実際のコマンド入力時には、
「le、lt、gt、ge のどれか一つを選ぶ」、
または、「パラメータを入力しない」、のどれかを選びます。
``<0-32>`` では 0 から 32 の間の数値を記入します。

.. code-block:: none

    例２)　(|no) info fib

とシンタックスが表記されていた場合、``(|no)`` はオプションパラメータで、
no を記入する・記入しないの２択になります。
no を選択した場合、後ろに続くコマンドの実行内容を解除するコマンドに変わります。

.. code-block:: none

    例３） show port statistics (|<0-255>|all) (|pps|bps|bytes)

とシンタックスが表記されていた場合、``(|<0-255>|all)`` と
``(|pps|bps|bytes)`` の２か所でオプションパラメータを選択します。
一つ目のオプションパラメータは、0 から 255 の間の数値を記入する、
all を記入する、何も記入しない、のどれかを選択します。
二つ目のオプションパラメータは、pps、bps、bytes のどれかを選択する、
または、何も選択しない、のどれかを選択します。

コマンドリファレンスの表記例
--------------------------------

コマンドリファレンスの表記項目を :numref:`example` にまとめます。

.. list-table:: 出力例の解説
   :name: example
   :widths: 15 45
   :header-rows: 1
   :stub-columns: 1

   * - 用語
     - 解説
   * - *CLI形式*
     - コマンドラインインターフェイス(CLI)のコマンド形式を表します。
   * - *説明*
     - コマンドの機能の概要を説明します。
   * - *処理*
     - コマンドが実行する処理をリストします。
   * - *引数*
     - パラメーターとして指定できる値とその意味を説明します。
   * - *前提条件*
     - コマンドが前提とする条件を説明します。
   * - *備考*
     - その他注意事項があれば記載します。

コマンドリファレンスの表記例は以下のようになります。

* *CLI形式*

.. code-block:: none

    show port

* *説明*

  * ・・・

* *処理*

  * ・・・

* *引数*

  * ・・・

* *前提条件*

  * ・・・

* *備考*

  * ・・・



アイコン
--------------------------------

本文中でいくつかアイコンを使用する場合があります。使用する各アイコンの概要を :numref:`icons` にまとめます。

.. list-table:: アイコンの説明
   :name: icons
   :widths: 15 45
   :header-rows: 1
   :stub-columns: 1

   * - アイコン
     - 説明
   * - |ic01| |la01|
     - 注釈、または、補足情報を記載する場合に使用するアイコンです。
   * - |ic02| |la02|
     - 注意事項を記載する場合に使用するアイコンです。
   * - |ic03| |la03|
     - ワンポイントアドバイスを記載する場合に使用するアイコンです。
   * - |ic04| |la04|
     - ヒントを記載する場合に使用するアイコンです。




